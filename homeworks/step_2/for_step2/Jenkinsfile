pipeline {
  agent { label 'jenkins-agent' }

  environment {
    DOCKER_CREDENTIALS = 'dockerhub-credentials'
    IMAGE_NAME = 'savanchukpavlo/step_2'
    REPO_DIR = 'homeworks/step_2/for_step2'
  }

  stages {
    stage('Checkout') {
      steps {
        dir("${env.REPO_DIR}") {
          git url: 'https://github.com/Pavlo-1992/devops_9_pavlo.git', branch: 'main'
        }
      }
    }

    stage('Build Docker image') {
      steps {
        dir("${env.REPO_DIR}") {
          script {
            sh 'ls -la'
            IMAGE_TAG = "${env.IMAGE_NAME}:${env.BUILD_NUMBER}"
            docker.build(IMAGE_TAG)
          }
        }
      }
    }

    stage('Run tests') {
      steps {
        dir("${env.REPO_DIR}") {
          script {
            def imageTag = "${env.IMAGE_NAME}:${env.BUILD_NUMBER}"
            try {
             sh "docker run --rm -e NODE_ENV=test -e PORT=8081 --name step2_test_container ${imageTag} npm test"
             } catch (err) {
              echo 'Test faild!'
              error("Stop pipeline.")
            }
          }
        }
      }
    }

    stage('Push to Docker Hub') {
      when {
        expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
      }
      steps {
        withCredentials([usernamePassword(
          credentialsId: "${env.DOCKER_CREDENTIALS}",
          usernameVariable: 'DOCKER_USER',
          passwordVariable: 'DOCKER_PASS'
        )]) {
          script {
            def imageTag = "${env.IMAGE_NAME}:${env.BUILD_NUMBER}"
            sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
            sh "docker tag ${imageTag} ${env.IMAGE_NAME}:latest"
            sh "docker push ${imageTag}"
            sh "docker push ${env.IMAGE_NAME}:latest"
          }
        }
      }
    }
  }
}


---
- name: Install java
  hosts: jenkins_worker
  become: yes

  tasks:
    - name: Install java
      ansible.builtin.apt:
        name:
          - openjdk-17-jdk
        state: present
        update_cache: yes

- name: Install Jenkins, Nginx and Docker + Compose !Only Ubuntu!
  hosts: jenkins_master
  become: true
  gather_facts: true

  vars:
    docker_keyring: /etc/apt/keyrings/docker.gpg
    docker_list: /etc/apt/sources.list.d/docker.list

  tasks:
    - name: Ensure prerequisites are installed
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - openjdk-17-jdk
        state: present
        update_cache: true

    - name: Remove any old Docker sources list file
      ansible.builtin.file:
        path: "{{ docker_list }}"
        state: absent

    - name: Ensure keyrings dir exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Remove any old Docker keyring to force a clean reimport
      ansible.builtin.file:
        path: "{{ docker_keyring }}"
        state: absent

    - name: Download and dearmor Docker GPG key (official)
      ansible.builtin.shell: |
        set -euo pipefail
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor > "{{ docker_keyring }}"
      args:
        executable: /bin/bash

    - name: Set permissions on keyring
      ansible.builtin.file:
        path: "{{ docker_keyring }}"
        state: file
        mode: '0644'

    - name: Add Docker apt repository (single line)
      ansible.builtin.copy:
        dest: "{{ docker_list }}"
        mode: '0644'
        content: |
          deb [arch={{ 'arm64' if ansible_facts.architecture in ['aarch64','arm64'] else 'amd64' }} signed-by={{ docker_keyring }}] https://download.docker.com/linux/ubuntu {{ ansible_facts.distribution_release }} stable

    - name: apt update
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker Engine and Compose v2
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started

    - name: Add user jenkins to the docker group
      user:
        name: jenkins
        groups: docker
        append: yes

    - name: Add Jenkins repository GPG key
      get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.asc
        mode: '0644'

    - name: Add Jenkins apt repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/"
        state: present
        filename: jenkins

    - name: Update apt and install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Ensure Jenkins is started and enabled
      systemd:
        name: jenkins
        enabled: yes
        state: started
        state: restarted

    - name: Display initial Jenkins admin password
      ansible.builtin.command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_admin_password
      changed_when: false

    - name: Show Jenkins initial admin password
      ansible.builtin.debug:
        msg: "Initial Jenkins Admin Password: {{ jenkins_admin_password.stdout }}"

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Copy Nginx config
      copy:
        src: nginx.conf
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: yes    
